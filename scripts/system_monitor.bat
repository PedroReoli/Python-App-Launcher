@echo off
setlocal enabledelayedexpansion

REM ========================================
REM üìä SISTEMA DE MONITORAMENTO AVAN√áADO
REM ========================================
REM Vers√£o: 1.0.0 - MONITORAMENTO EM TEMPO REAL
REM Autor: Python App Launcher Team
REM ========================================

chcp 65001 >nul 2>&1
color 0D

echo.
echo ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
echo ‚ïë                    üìä SISTEMA DE MONITORAMENTO AVAN√áADO                      ‚ïë
echo ‚ïë                                                                              ‚ïë
echo ‚ïë  üîç Diagn√≥stico + Performance + IA + Alertas + Relat√≥rios + Otimiza√ß√£o     ‚ïë
echo ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
echo.

REM ========================================
REM 1. VERIFICA√á√ÉO DE ARGUMENTOS
REM ========================================

set "REAL_TIME="
set "DIAGNOSTIC="
set "PERFORMANCE="
set "AI_STATUS="
set "GENERATE_REPORT="
set "MONITOR_DURATION="

for %%a in (%*) do (
    if "%%a"=="--realtime" set "REAL_TIME=true"
    if "%%a"=="--diagnostic" set "DIAGNOSTIC=true"
    if "%%a"=="--performance" set "PERFORMANCE=true"
    if "%%a"=="--ai" set "AI_STATUS=true"
    if "%%a"=="--report" set "GENERATE_REPORT=true"
    if "%%a:~0,2%"=="--" (
        set "MONITOR_DURATION=%%a:~2%"
    )
)

REM ========================================
REM 2. MONITORAMENTO EM TEMPO REAL
REM ========================================

if defined REAL_TIME (
    echo üìã [1/6] Iniciando monitoramento em tempo real...
    echo.
    
    echo ‚è±Ô∏è  Monitoramento ativo - Pressione Ctrl+C para parar
    echo.
    
    :monitor_loop
    cls
    echo ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
    echo ‚ïë                    üìä MONITORAMENTO EM TEMPO REAL                            ‚ïë
    echo ‚ïë                              %date% %time%                                   ‚ïë
    echo ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
    echo.
    
    REM CPU Usage
    for /f "tokens=2 delims==" %%a in ('wmic cpu get loadpercentage /value ^| find "LoadPercentage"') do set "CPU_LOAD=%%a"
    echo üî• CPU: %CPU_LOAD%%%
    
    REM Memory Usage
    for /f "tokens=2 delims==" %%a in ('wmic OS get TotalVisibleMemorySize,FreePhysicalMemory /value ^| find "TotalVisibleMemorySize"') do set "TOTAL_MEM=%%a"
    for /f "tokens=2 delims==" %%a in ('wmic OS get TotalVisibleMemorySize,FreePhysicalMemory /value ^| find "FreePhysicalMemory"') do set "FREE_MEM=%%a"
    set /a "USED_MEM=%TOTAL_MEM%-%FREE_MEM%"
    set /a "MEM_PERCENT=%USED_MEM%*100/%TOTAL_MEM%"
    echo üíæ RAM: %MEM_PERCENT%%% (%USED_MEM%KB / %TOTAL_MEM%KB)
    
    REM Disk Usage
    for /f "tokens=3" %%a in ('dir /-c C: 2^>nul ^| find "bytes free"') do set "FREE_DISK=%%a"
    set /a "FREE_GB=%FREE_DISK%/1073741824"
    echo üíø Disco C: %FREE_GB%GB livre
    
    REM Network Status
    ping -n 1 8.8.8.8 >nul 2>&1
    if errorlevel 1 (
        echo üåê Rede: ‚ùå Offline
    ) else (
        echo üåê Rede: ‚úÖ Online
    )
    
    REM Python Status
    python --version >nul 2>&1
    if errorlevel 1 (
        echo üêç Python: ‚ùå N√£o encontrado
    ) else (
        echo üêç Python: ‚úÖ Funcionando
    )
    
    REM Ollama Status
    curl -s http://localhost:11434/api/tags >nul 2>&1
    if errorlevel 1 (
        echo ü§ñ Ollama: ‚ùå Offline
    ) else (
        echo ü§ñ Ollama: ‚úÖ Online
    )
    
    REM Application Status
    tasklist /FI "IMAGENAME eq python.exe" 2>NUL | find /I /N "python.exe">NUL
    if "%ERRORLEVEL%"=="0" (
        echo üöÄ App: ‚úÖ Executando
    ) else (
        echo üöÄ App: ‚ùå Parada
    )
    
    echo.
    echo ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
    echo ‚ïë                              PROCESSOS ATIVOS                                ‚ïë
    echo ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
    echo.
    
    REM Listar processos Python
    tasklist /FI "IMAGENAME eq python.exe" /FO TABLE
    
    echo.
    echo ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
    echo ‚ïë                              ALERTAS                                        ‚ïë
    echo ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
    echo.
    
    REM Verificar alertas
    if %CPU_LOAD% GTR 80 (
        echo ‚ö†Ô∏è  ALERTA: CPU em uso elevado (%CPU_LOAD%%%)
    )
    
    if %MEM_PERCENT% GTR 85 (
        echo ‚ö†Ô∏è  ALERTA: Mem√≥ria em uso elevado (%MEM_PERCENT%%%)
    )
    
    if %FREE_GB% LSS 5 (
        echo ‚ö†Ô∏è  ALERTA: Espa√ßo em disco baixo (%FREE_GB%GB)
    )
    
    echo.
    echo ‚è±Ô∏è  Atualizando em 5 segundos... (Ctrl+C para parar)
    timeout /t 5 /nobreak >nul
    goto monitor_loop
)

REM ========================================
REM 3. DIAGN√ìSTICO COMPLETO
REM ========================================

if defined DIAGNOSTIC (
    echo üìã [2/6] Executando diagn√≥stico completo do sistema...
    echo.
    
    echo üîç Verificando componentes do sistema...
    echo.
    
    REM Sistema Operacional
    echo üìä Sistema Operacional:
    echo    - OS: %OS%
    echo    - Arquitetura: %PROCESSOR_ARCHITECTURE%
    echo    - Vers√£o: %OS_VERSION%
    echo.
    
    REM Hardware
    echo üîß Hardware:
    for /f "tokens=2 delims==" %%a in ('wmic computersystem get TotalPhysicalMemory /value ^| find "TotalPhysicalMemory"') do set "TOTAL_RAM=%%a"
    set /a "RAM_GB=%TOTAL_RAM:~0,-1%/1073741824"
    echo    - RAM Total: %RAM_GB%GB
    
    for /f "tokens=2 delims==" %%a in ('wmic cpu get NumberOfCores /value ^| find "NumberOfCores"') do set "CPU_CORES=%%a"
    echo    - CPU Cores: %CPU_CORES%
    
    for /f "tokens=2 delims==" %%a in ('wmic cpu get Name /value ^| find "Name"') do set "CPU_NAME=%%a"
    echo    - CPU: %CPU_NAME%
    echo.
    
    REM Python Environment
    echo üêç Ambiente Python:
    python --version >nul 2>&1
    if errorlevel 1 (
        echo    - Status: ‚ùå N√£o instalado
    ) else (
        for /f "tokens=2" %%a in ('python --version 2^>^&1') do set "PYTHON_VERSION=%%a"
        echo    - Vers√£o: %PYTHON_VERSION%
        echo    - Status: ‚úÖ Funcionando
        
        REM Verificar m√≥dulos
        echo    - M√≥dulos cr√≠ticos:
        python -c "import tkinter" >nul 2>&1 && echo      ‚úÖ tkinter
        python -c "import psutil" >nul 2>&1 && echo      ‚úÖ psutil
        python -c "import requests" >nul 2>&1 && echo    ‚úÖ requests
    )
    echo.
    
    REM IA System
    echo ü§ñ Sistema de IA:
    ollama --version >nul 2>&1
    if errorlevel 1 (
        echo    - Ollama: ‚ùå N√£o instalado
    ) else (
        for /f "tokens=2" %%a in ('ollama --version 2^>^&1') do set "OLLAMA_VERSION=%%a"
        echo    - Vers√£o: %OLLAMA_VERSION%
        echo    - Status: ‚úÖ Instalado
        
        REM Verificar servidor
        curl -s http://localhost:11434/api/tags >nul 2>&1
        if errorlevel 1 (
            echo    - Servidor: ‚ùå Offline
        ) else (
            echo    - Servidor: ‚úÖ Online
            
            REM Listar modelos
            echo    - Modelos instalados:
            ollama list | findstr /v "NAME" | findstr /v "==="
        )
    )
    echo.
    
    REM Application Files
    echo üìÅ Arquivos da Aplica√ß√£o:
    if exist "main.py" echo    ‚úÖ main.py
    if exist "config.json" echo    ‚úÖ config.json
    if exist "requirements.txt" echo    ‚úÖ requirements.txt
    if exist "Apps" echo    ‚úÖ Apps/
    if exist "data" echo    ‚úÖ data/
    if exist "logs" echo    ‚úÖ logs/
    if exist "bot" echo    ‚úÖ bot/
    echo.
    
    REM Performance Metrics
    echo ‚ö° M√©tricas de Performance:
    for /f "tokens=2 delims==" %%a in ('wmic cpu get loadpercentage /value ^| find "LoadPercentage"') do set "CPU_LOAD=%%a"
    echo    - CPU Atual: %CPU_LOAD%%%
    
    for /f "tokens=2 delims==" %%a in ('wmic OS get TotalVisibleMemorySize,FreePhysicalMemory /value ^| find "TotalVisibleMemorySize"') do set "TOTAL_MEM=%%a"
    for /f "tokens=2 delims==" %%a in ('wmic OS get TotalVisibleMemorySize,FreePhysicalMemory /value ^| find "FreePhysicalMemory"') do set "FREE_MEM=%%a"
    set /a "USED_MEM=%TOTAL_MEM%-%FREE_MEM%"
    set /a "MEM_PERCENT=%USED_MEM%*100/%TOTAL_MEM%"
    echo    - RAM Atual: %MEM_PERCENT%%%
    
    for /f "tokens=3" %%a in ('dir /-c C: 2^>nul ^| find "bytes free"') do set "FREE_DISK=%%a"
    set /a "FREE_GB=%FREE_DISK%/1073741824"
    echo    - Disco Livre: %FREE_GB%GB
    echo.
    
    echo ‚úÖ Diagn√≥stico completo conclu√≠do!
    echo.
)

REM ========================================
REM 4. AN√ÅLISE DE PERFORMANCE
REM ========================================

if defined PERFORMANCE (
    echo üìã [3/6] Analisando performance do sistema...
    echo.
    
    echo üìä Coletando m√©tricas de performance...
    echo.
    
    REM CPU Performance
    echo üî• CPU Performance:
    for /f "tokens=2 delims==" %%a in ('wmic cpu get loadpercentage /value ^| find "LoadPercentage"') do set "CPU_LOAD=%%a"
    if %CPU_LOAD% LSS 30 (
        echo    - Status: ‚úÖ Excelente (%CPU_LOAD%%%)
    ) else if %CPU_LOAD% LSS 60 (
        echo    - Status: ‚ö†Ô∏è  Bom (%CPU_LOAD%%%)
    ) else if %CPU_LOAD% LSS 80 (
        echo    - Status: ‚ö†Ô∏è  Moderado (%CPU_LOAD%%%)
    ) else (
        echo    - Status: ‚ùå Cr√≠tico (%CPU_LOAD%%%)
    )
    
    REM Memory Performance
    echo üíæ Memory Performance:
    for /f "tokens=2 delims==" %%a in ('wmic OS get TotalVisibleMemorySize,FreePhysicalMemory /value ^| find "TotalVisibleMemorySize"') do set "TOTAL_MEM=%%a"
    for /f "tokens=2 delims==" %%a in ('wmic OS get TotalVisibleMemorySize,FreePhysicalMemory /value ^| find "FreePhysicalMemory"') do set "FREE_MEM=%%a"
    set /a "USED_MEM=%TOTAL_MEM%-%FREE_MEM%"
    set /a "MEM_PERCENT=%USED_MEM%*100/%TOTAL_MEM%"
    if %MEM_PERCENT% LSS 50 (
        echo    - Status: ‚úÖ Excelente (%MEM_PERCENT%%%)
    ) else if %MEM_PERCENT% LSS 75 (
        echo    - Status: ‚ö†Ô∏è  Bom (%MEM_PERCENT%%%)
    ) else if %MEM_PERCENT% LSS 90 (
        echo    - Status: ‚ö†Ô∏è  Moderado (%MEM_PERCENT%%%)
    ) else (
        echo    - Status: ‚ùå Cr√≠tico (%MEM_PERCENT%%%)
    )
    
    REM Disk Performance
    echo üíø Disk Performance:
    for /f "tokens=3" %%a in ('dir /-c C: 2^>nul ^| find "bytes free"') do set "FREE_DISK=%%a"
    set /a "FREE_GB=%FREE_DISK%/1073741824"
    if %FREE_GB% GTR 20 (
        echo    - Status: ‚úÖ Excelente (%FREE_GB%GB livre)
    ) else if %FREE_GB% GTR 10 (
        echo    - Status: ‚ö†Ô∏è  Bom (%FREE_GB%GB livre)
    ) else if %FREE_GB% GTR 5 (
        echo    - Status: ‚ö†Ô∏è  Moderado (%FREE_GB%GB livre)
    ) else (
        echo    - Status: ‚ùå Cr√≠tico (%FREE_GB%GB livre)
    )
    
    REM Network Performance
    echo üåê Network Performance:
    ping -n 1 8.8.8.8 >nul 2>&1
    if errorlevel 1 (
        echo    - Status: ‚ùå Offline
    ) else (
        echo    - Status: ‚úÖ Online
    )
    
    REM Python Performance
    echo üêç Python Performance:
    python --version >nul 2>&1
    if errorlevel 1 (
        echo    - Status: ‚ùå N√£o dispon√≠vel
    ) else (
        echo    - Status: ‚úÖ Funcionando
        REM Testar performance b√°sica
        python -c "import time; start=time.time(); [i**2 for i in range(10000)]; print(f'Performance: {time.time()-start:.3f}s')" 2>nul
    )
    
    REM IA Performance
    echo ü§ñ IA Performance:
    curl -s http://localhost:11434/api/tags >nul 2>&1
    if errorlevel 1 (
        echo    - Status: ‚ùå Offline
    ) else (
        echo    - Status: ‚úÖ Online
        REM Testar resposta da IA
        echo    - Testando resposta...
        curl -s -X POST http://localhost:11434/api/generate -d "{\"model\":\"llama2\",\"prompt\":\"test\",\"stream\":false}" >nul 2>&1
        if errorlevel 1 (
            echo    - Resposta: ‚ö†Ô∏è  Lenta
        ) else (
            echo    - Resposta: ‚úÖ R√°pida
        )
    )
    
    echo.
    echo ‚úÖ An√°lise de performance conclu√≠da!
    echo.
)

REM ========================================
REM 5. STATUS DO SISTEMA DE IA
REM ========================================

if defined AI_STATUS (
    echo üìã [4/6] Verificando status do sistema de IA...
    echo.
    
    REM Verificar Ollama
    echo ü§ñ Ollama Status:
    ollama --version >nul 2>&1
    if errorlevel 1 (
        echo    - Instala√ß√£o: ‚ùå N√£o encontrado
        echo    - Servidor: ‚ùå N√£o dispon√≠vel
        echo    - Modelos: ‚ùå N√£o dispon√≠vel
    ) else (
        for /f "tokens=2" %%a in ('ollama --version 2^>^&1') do set "OLLAMA_VERSION=%%a"
        echo    - Instala√ß√£o: ‚úÖ %OLLAMA_VERSION%
        
        REM Verificar servidor
        curl -s http://localhost:11434/api/tags >nul 2>&1
        if errorlevel 1 (
            echo    - Servidor: ‚ùå Offline
            echo    - Modelos: ‚ùå N√£o dispon√≠vel
        ) else (
            echo    - Servidor: ‚úÖ Online
            
            REM Listar modelos
            echo    - Modelos dispon√≠veis:
            ollama list | findstr /v "NAME" | findstr /v "===" | findstr /v "^$"
        )
    )
    echo.
    
    REM Verificar arquivos de IA
    echo üìÅ Arquivos de IA:
    if exist "bot" (
        echo    ‚úÖ Diret√≥rio bot/ encontrado
        if exist "bot\ollama_manager.py" echo      ‚úÖ ollama_manager.py
        if exist "bot\app_analyzer.py" echo      ‚úÖ app_analyzer.py
        if exist "bot\doc_generator.py" echo      ‚úÖ doc_generator.py
        if exist "bot\chat_interface.py" echo      ‚úÖ chat_interface.py
    ) else (
        echo    ‚ùå Diret√≥rio bot/ n√£o encontrado
    )
    echo.
    
    REM Testar funcionalidades de IA
    echo üß™ Testando funcionalidades de IA:
    curl -s http://localhost:11434/api/tags >nul 2>&1
    if not errorlevel 1 (
        echo    - Conex√£o: ‚úÖ Funcionando
        echo    - Testando gera√ß√£o de resposta...
        curl -s -X POST http://localhost:11434/api/generate -d "{\"model\":\"llama2\",\"prompt\":\"Hello\",\"stream\":false}" >nul 2>&1
        if errorlevel 1 (
            echo    - Gera√ß√£o: ‚ö†Ô∏è  Lenta ou com erro
        ) else (
            echo    - Gera√ß√£o: ‚úÖ Funcionando
        )
    ) else (
        echo    - Conex√£o: ‚ùå Falha
        echo    - Gera√ß√£o: ‚ùå N√£o dispon√≠vel
    )
    echo.
    
    echo ‚úÖ Status do sistema de IA verificado!
    echo.
)

REM ========================================
REM 6. GERA√á√ÉO DE RELAT√ìRIO
REM ========================================

if defined GENERATE_REPORT (
    echo üìã [5/6] Gerando relat√≥rio completo...
    echo.
    
    set "REPORT_FILE=system_report_%date:~-4,4%%date:~-10,2%%date:~-7,2%_%time:~0,2%%time:~3,2%%time:~6,2%.txt"
    set "REPORT_FILE=%REPORT_FILE: =0%"
    
    echo üìÑ Criando relat√≥rio: %REPORT_FILE%
    echo.
    
    (
        echo ========================================
        echo RELAT√ìRIO DO SISTEMA - %date% %time%
        echo ========================================
        echo.
        echo SISTEMA OPERACIONAL:
        echo - OS: %OS%
        echo - Arquitetura: %PROCESSOR_ARCHITECTURE%
        echo - Vers√£o: %OS_VERSION%
        echo.
        echo HARDWARE:
        for /f "tokens=2 delims==" %%a in ('wmic computersystem get TotalPhysicalMemory /value ^| find "TotalPhysicalMemory"') do set "TOTAL_RAM=%%a"
        set /a "RAM_GB=%TOTAL_RAM:~0,-1%/1073741824"
        echo - RAM Total: %RAM_GB%GB
        for /f "tokens=2 delims==" %%a in ('wmic cpu get NumberOfCores /value ^| find "NumberOfCores"') do set "CPU_CORES=%%a"
        echo - CPU Cores: %CPU_CORES%
        for /f "tokens=2 delims==" %%a in ('wmic cpu get Name /value ^| find "Name"') do set "CPU_NAME=%%a"
        echo - CPU: %CPU_NAME%
        echo.
        echo PERFORMANCE ATUAL:
        for /f "tokens=2 delims==" %%a in ('wmic cpu get loadpercentage /value ^| find "LoadPercentage"') do set "CPU_LOAD=%%a"
        echo - CPU: %CPU_LOAD%%%
        for /f "tokens=2 delims==" %%a in ('wmic OS get TotalVisibleMemorySize,FreePhysicalMemory /value ^| find "TotalVisibleMemorySize"') do set "TOTAL_MEM=%%a"
        for /f "tokens=2 delims==" %%a in ('wmic OS get TotalVisibleMemorySize,FreePhysicalMemory /value ^| find "FreePhysicalMemory"') do set "FREE_MEM=%%a"
        set /a "USED_MEM=%TOTAL_MEM%-%FREE_MEM%"
        set /a "MEM_PERCENT=%USED_MEM%*100/%TOTAL_MEM%"
        echo - RAM: %MEM_PERCENT%%%
        for /f "tokens=3" %%a in ('dir /-c C: 2^>nul ^| find "bytes free"') do set "FREE_DISK=%%a"
        set /a "FREE_GB=%FREE_DISK%/1073741824"
        echo - Disco Livre: %FREE_GB%GB
        echo.
        echo PYTHON ENVIRONMENT:
        python --version >nul 2>&1
        if errorlevel 1 (
            echo - Status: N√£o instalado
        ) else (
            for /f "tokens=2" %%a in ('python --version 2^>^&1') do set "PYTHON_VERSION=%%a"
            echo - Vers√£o: %PYTHON_VERSION%
            echo - Status: Funcionando
        )
        echo.
        echo SISTEMA DE IA:
        ollama --version >nul 2>&1
        if errorlevel 1 (
            echo - Ollama: N√£o instalado
        ) else (
            for /f "tokens=2" %%a in ('ollama --version 2^>^&1') do set "OLLAMA_VERSION=%%a"
            echo - Vers√£o: %OLLAMA_VERSION%
            curl -s http://localhost:11434/api/tags >nul 2>&1
            if errorlevel 1 (
                echo - Servidor: Offline
            ) else (
                echo - Servidor: Online
            )
        )
        echo.
        echo ARQUIVOS DA APLICA√á√ÉO:
        if exist "main.py" echo - main.py: Presente
        if exist "config.json" echo - config.json: Presente
        if exist "requirements.txt" echo - requirements.txt: Presente
        if exist "Apps" echo - Apps/: Presente
        if exist "data" echo - data/: Presente
        if exist "logs" echo - logs/: Presente
        if exist "bot" echo - bot/: Presente
        echo.
        echo RECOMENDA√á√ïES:
        if %CPU_LOAD% GTR 80 echo - CPU em uso elevado, considere fechar aplica√ß√µes
        if %MEM_PERCENT% GTR 85 echo - Mem√≥ria em uso elevado, considere reiniciar
        if %FREE_GB% LSS 5 echo - Espa√ßo em disco baixo, libere espa√ßo
        echo.
        echo ========================================
        echo FIM DO RELAT√ìRIO
        echo ========================================
    ) > "%REPORT_FILE%"
    
    echo ‚úÖ Relat√≥rio gerado: %REPORT_FILE%
    echo.
)

REM ========================================
REM 7. MENU PRINCIPAL
REM ========================================

if not defined REAL_TIME if not defined DIAGNOSTIC if not defined PERFORMANCE if not defined AI_STATUS if not defined GENERATE_REPORT (
    echo üìã [6/6] Menu de monitoramento...
    echo.
    
    echo üéØ Escolha uma op√ß√£o:
    echo.
    echo    1. Monitoramento em tempo real
    echo    2. Diagn√≥stico completo
    echo    3. An√°lise de performance
    echo    4. Status do sistema de IA
    echo    5. Gerar relat√≥rio
    echo    6. Todas as verifica√ß√µes
    echo    7. Sair
    echo.
    
    set /p "CHOICE=Digite sua escolha (1-7): "
    
    if "%CHOICE%"=="1" (
        system_monitor.bat --realtime
    ) else if "%CHOICE%"=="2" (
        system_monitor.bat --diagnostic
    ) else if "%CHOICE%"=="3" (
        system_monitor.bat --performance
    ) else if "%CHOICE%"=="4" (
        system_monitor.bat --ai
    ) else if "%CHOICE%"=="5" (
        system_monitor.bat --report
    ) else if "%CHOICE%"=="6" (
        system_monitor.bat --diagnostic --performance --ai --report
    ) else if "%CHOICE%"=="7" (
        goto :end
    ) else (
        echo ‚ùå Op√ß√£o inv√°lida!
        pause
        goto :menu
    )
)

REM ========================================
REM 8. FINALIZA√á√ÉO
REM ========================================

:end
echo.
echo ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
echo ‚ïë                    üìä SISTEMA DE MONITORAMENTO AVAN√áADO                      ‚ïë
echo ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
echo.

echo üìã Recursos dispon√≠veis:
echo    üîç Monitoramento em tempo real
echo    üìä Diagn√≥stico completo do sistema
echo    ‚ö° An√°lise de performance
echo    ü§ñ Status do sistema de IA
echo    üìÑ Gera√ß√£o de relat√≥rios
echo    ‚ö†Ô∏è  Alertas autom√°ticos
echo    üìà M√©tricas detalhadas
echo.

echo üéØ Comandos √∫teis:
echo    system_monitor.bat --realtime    (monitoramento cont√≠nuo)
echo    system_monitor.bat --diagnostic  (diagn√≥stico completo)
echo    system_monitor.bat --performance (an√°lise de performance)
echo    system_monitor.bat --ai          (status da IA)
echo    system_monitor.bat --report      (gerar relat√≥rio)
echo.

pause 